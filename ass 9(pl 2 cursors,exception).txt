1. Using cursor display the details of all those employees from emp table whose sum of sal and comm. Is more than 25000;


SET SURVEROUTPUT ON
DECLARE
	Vempno emp.empno%type;
	Vename emp.ename%type;
	Vsal emp.sal%type;
	Vdeptno emp.deptno%type;
	URSOR C1 is SELECT empno,ename,sal,deptno from emp
	where sal+NVL(comm.,0) > 25000;
BEGIN
	OPENC1;
	LOOP
		FETCH C1 INTO Vempno,Vname,Vsal, Vdeptno;
		IF C1%FOUND THEN
			Dbms_output.put_line(Vempno||’ ‘ || Vname||’ ‘ || Vsal ||’ ‘ ||Vdeptno);
		ELSE
			EXIT;
		END IF;
	END LOOP;
	CLOSE C1;
END;




2. Write a block which uses a Cursor For Loop to select the five hightest earners from emp table and write their details to the message table which has the following three attributes: EmpNumber, Name and Salary.




SET SURVEROUTPUT ON
DECLARE
	CURSOR C2 IS SELECT empno, sal, ename from emp order by sal desc;
BEGIN
	FOR record1 IN C1
	LOOP
		INSERT INTO message (EmpNumber, Name,Salary)
		VALUES (record1.empno, record1.sal, record1.ename);
		EXIT WHEN C1%ROWCOUNT=5;
	END LOOP;
	COMMIT;
END;




3. Create a table Emp_sal_inc that have three column (Emp_id,Cur_sal,Inc_date). 
Now write a PL/SQL block of code will allow 2% salary increment of all employee of Computer Science department. After that a record is to be inserted into the above table.



Create table emp_sal
	(emp_id varchar2(8) Primary key,
	cur_sal number(7,2) NOT NULL;
	inc_date date NOT NULL);

SET SURVEROUTPUT ON
DECLARE
	inc number;
	emp_sal_rec emp_sal%ROWTYPE;
	CURSOR cur is select * from emp where deptno = (select deptno from dept
	where dname LIKE ‘RESEARCH’);
BEGIN
	FOR emp_sal_rec in cur
	LOOP
		inc := emp_sal_rec.sal*1.02;
		insert into emp_sal values (emp_sal_rec.empno, inc, sysdate);
	END LOOP;
END;




4. Write a PL/SQL block of code to update the location of specific department number that will be taken from user. Display an appropriate message using SQL%FOUND based on existence of the record in the Department table and display an appropriate message using SQL%FOUND based on the non-existence of the record in Department Table.


DECLARE
	dno number := &deptno;
BEGIN
	update dept set loc =’KOLKATA’ where deptno = dno;
	if (SQL%FOUND) then
		DBMS_OUTPUT.PUT_LINE(‘Updated’);
	else
		DBMS_OUTPUT.PUT_LINE(‘Data NOT Found’);
	end if;
END;



5. Write a PL/SQL block of code using your own exception handling that will show an error message whenever you want to insert a null value in a not null column.


SET SURVEROUTPUT ON
DECLARE
	user_error EXCEPTION;
	PRAGMA EXECPTION_INIT(user_error, -0150);
BEGIN
	insert into emp values( NULL, ‘Subir’, ‘REARCH’, 7900, ’12-MAY-2002’, 90000,1200,200);
EXECPTION
	WHEN user_error THEN
		DBMS_OUTPUT.PUT_LINE (‘CANNOT INSERT NULL VALUES’);

END;


6. Write a PL/SQL block of code which raised ‘NO DATA FOUND’ exception when there is no employee joined in 1997 at the time of displaying 1997 joined employees.


SET SURVEROUTPUT ON
DECLARE
	Vename emp.ename%type;
	Vjob emp.job%type;
BEGIN
	SELECT ename, job INTO Vename, Vjob FROM emp
	WHERE doj BETWEEN ’01-JAN-97’ AND ’31-DEC-97’;
	dbms_output.put_line(Vename ||’ ‘ || Vjob);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		dbms_output.put_line(’ No Employee hired in 97‘);

END;


7. Write a PL/SQL Block of code to find the QOH amount from item_master table. If QOH is less than 1 raise an user define exception “INSUFFICIENT STOCK”.



SET SURVEROUTPUT ON
DECLARE
	OUT_OF_STOCK 		EXCEPTION;
	QTYOH 			item_master.QOH%type;
BEGIN
	SELECT QOH into QTYOH from item_master;
	IF QTYOH <1 THEN
		RAISE OUT_OF_STOCK;
	END IF;
EXCEPTION
	WHEN OUT_OF_STOCK THEN
		dbms_output.put_line(‘INSUFFICIENT STOCK’);

END;


8. Write a PL/SQL block of code using your own exception handling that will show an error message whenever you want to insert a null value in a not null column.